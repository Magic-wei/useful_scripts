#!/bin/bash

git_update_batch(){
    # Parameters
    SCRIPT_DIR=$( cd $( dirname $(readlink -f ${BASH_SOURCE[0]}) ) && pwd )

    # Functions
    helpFunction(){
        echo ""
        echo "Usage: git_update_batch <path> <mode>"
        echo ""
        echo -e "  -h/--help  \tHelp"
        echo -e "  <path>     \tGive the path as base dir to start searching,"
        echo -e "             \tabsolute or relative paths are both ok."
        echo -e "  <mode>     \tSupport status, push, pull, fetch and remote mode."
        exit 1
    }

    checkMode(){
        case $1 in
            status) echo "git status mode";;
            push) echo "git push mode";;
            pull) echo "git pull mode";;
            fetch) echo "git fetch mode";;
            remote) echo "git remote mode";;
            *) echo -e "\033[31m This script now only support status, push, pull, fetch and remote mode! \033[0m" &&  exit;;
        esac
    }

    main(){
        if [ $# -eq 0 ] || [ $# -gt 2 ] || [ $1 = "-h" ] || [ $1 = "--help" ] ; then
            helpFunction
        fi

        # mode check
        checkMode $2

        # find all git repositories in base directory, exit with no git repository.
        # use ${GIT_REPO_DIR[*]} exported by find_git_repo to access to git repositories.
        BASE_DIR=$(cd $1 && pwd)
        source ${SCRIPT_DIR}/find_git_repo ${BASE_DIR}
        if [ ${#GIT_REPO_DIR[*]} -lt 1 ]; then
            echo -e "\033[31mNo git repository is found. \033[0m"
            return
        fi

        # execute git instruction in a batch way
        for dir in ${GIT_REPO_DIR[*]}; do
            cd ${dir}
            echo -e "\033[32mnow in the git repository: ${dir} \033[0m" # green words
            case $2 in
                status) git status;;
                push) git push;;
                pull) git pull;;
                fetch) git fetch;;
                remote) git remote -v;;
            esac
        done
    }

    # Entry
    main $@
}

git_update_batch $@